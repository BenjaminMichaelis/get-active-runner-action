name: "Determine Runner for Jobs"
description: "Checks the status of self-hosted runners and selects a runner based on availability."
author: "@BenjaminMichaelis"
branding:
  icon: "check-circle"
  color: "green"

inputs:
  primary-runner:
    description: 'The labels of the self-hosted runner.'
    required: true
  fallback-runner:
    description: 'The runner to use if the primary runner is not available.'
    required: true
  github-token:
    description: 'The GitHub token.'
    required: true
  min-available-runners:
    description: 'The minimum number of available runners to select the primary runner.'
    required: false
    default: '1'

outputs:
  runner:
    description: "The runner to be used for subsequent jobs."
    value: ${{ steps.check-runners.outputs.runner }}

runs:
  using: "composite"
  steps:
    - name: Check runners
      id: check-runners
      run: |
        # Define a function to check the runners
        function CheckRunners($jsonResponse, $minAvailableRunners) {
            # Convert the JSON response to a PowerShell object
            $object = $jsonResponse | ConvertFrom-Json

            # Check if there are at least $minAvailableRunners items with a status of "online" and busy of false
            $onlineAndNotBusy = $object.runners | Where-Object { $_.status -eq "online" -and $_.busy -eq $false }

            # Return true if there are at least $minAvailableRunners items with a status of "online" and busy of false
            if ($onlineAndNotBusy.Count -ge $minAvailableRunners) {
                return $true
            } else {
                return $false
            }
        }

        # Get the JSON response from the API for the specific repository
        $jsonResponseRepo = gh api /repos/${{ github.repository }}/actions/runners -H "Authorization: Bearer ${{ env.GH_TOKEN }}" | Out-String
        Write-Host "Repository Runners API Response: $jsonResponseRepo"

        # Check the runners for the specific repository
        $repoRunnersOnlineAndNotBusy = CheckRunners $jsonResponseRepo ${{ env.MIN_AVAILABLE_RUNNERS }}
        Write-Host "Repository Runners Online and Not Busy: $repoRunnersOnlineAndNotBusy"

        if ($repoRunnersOnlineAndNotBusy) {
            # If there are online and not busy runners for the specific repository, return true
            Write-Output "runner=${{ inputs.primary-runner }}"
            Write-Output "runner=${{ inputs.primary-runner }}" >> $env:GITHUB_OUTPUT
        } else {
            # If there are no online and not busy runners for the specific repository, check the runners at the organization level
            $jsonResponseOrg = gh api /orgs/${{ github.repository_owner }}/actions/runners -H "Authorization: Bearer ${{ env.GH_TOKEN }}" | Out-String
            Write-Host "Organization Runners API Response: $jsonResponseOrg"
            $orgRunnersOnlineAndNotBusy = CheckRunners $jsonResponseOrg ${{ env.MIN_AVAILABLE_RUNNERS }}
            Write-Host "Organization Runners Online and Not Busy: $orgRunnersOnlineAndNotBusy"

            # Return the result of checking the runners at the organization level
            if ($orgRunnersOnlineAndNotBusy) {
                Write-Output "runner=${{ inputs.primary-runner }}"
                Write-Output "runner=${{ inputs.primary-runner }}" >> $env:GITHUB_OUTPUT
            } else {
                Write-Output "runner=${{ inputs.fallback-runner }}"
                Write-Output "runner=${{ inputs.fallback-runner }}" >> $env:GITHUB_OUTPUT
            }
        }
      shell: pwsh
      env:
        primary-runner: ${{ inputs.primary-runner }}
        fallback-runner: ${{ inputs.fallback-runner }}
        GH_TOKEN: ${{ inputs.github-token }}
        MIN_AVAILABLE_RUNNERS: ${{ inputs.min-available-runners }}
